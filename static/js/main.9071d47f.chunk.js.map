{"version":3,"sources":["Img/DefaultIMG.JPG","Library.js","AlbumDisplay.js","FindAlbum.js","Header.js","App.js","index.js"],"names":["LibraryDisplay","albumLibrary","localStorage","getItem","albumLibArray","JSON","parse","handleClick","e","albumId","target","parentNode","id","map","album","albumIndex","indexOf","splice","setItem","stringify","alert","window","location","reload","length","className","src","alt","href","onClick","AlbumDisplay","albumInfo","imageUrl","Object","values","image","Image","name","artist","url","push","mbid","doesntExistYet","console","log","i","FindAlbum","useState","albumN","setAlbumN","artistN","setArtistN","setAlbumInfor","searchMusic","a","preventDefault","fetch","headers","res","json","data","albumInfoArray","onSubmit","type","placeholder","required","value","onChange","Header","App","Library","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9071d47f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DefaultIMG.cdfe69fd.JPG\";","import React from \"react\"\n\nfunction LibraryDisplay () {\n   const albumLibrary = localStorage.getItem(\"albumNameKey\")\n   const albumLibArray = JSON.parse(albumLibrary) || []\n\n   // When button is cliked remove item from local stroage \n   function handleClick(e) {\n       let albumId = e.target.parentNode.id\n       albumLibArray.map(album => {\n           if (albumId === album[2]) {\n               let albumIndex = albumLibArray.indexOf(album)\n               albumLibArray.splice(albumIndex, 1)\n               localStorage.setItem(\"albumNameKey\", JSON.stringify(albumLibArray))\n               alert(`${album[0]} removed from your library.`)\n               window.location.reload()\n           }\n           return (\n              <h1>{null}</h1>\n           )\n       })\n   }\n\n    \n\n    //Display all of the albums inside the library\n    if (albumLibArray.length === 0) {\n\n        return (\n            <div>\n               <h1 className=\"lib-title\">Library</h1>\n                <h1 className=\"empty\">Nothing in your library.</h1>\n            </div>\n        )\n    }else {\n        return (\n           <div>\n               <h1 className=\"lib-title\">Library</h1>\n                <div className=\"library\">\n                    {albumLibArray.map(album => (\n                        <div className=\"album\" id={album[2]} key={album[2]}>\n                            <img className=\"libraryImg\" src={album[4]} alt=\"Album cover\"/>\n                            <h2>{album[0]} by {album[1]}</h2>  \n                            <a href={album[3]} className=\"albumLink\">Listen Now</a>\n                            <button className=\"btn remove\" onClick={handleClick}>Remove from Library</button>\n                    </div>\n\n                    ))}\n                    \n                </div>\n           </div>\n        )\n    }    \n}\n\n\nexport default LibraryDisplay","import React from \"react\"\nimport Image from \"./Img/DefaultIMG.JPG\"\nimport LibraryDisplay from \"./Library\"\n\n\n// Album information Component \nfunction AlbumDisplay({albumInfo}) {  \n   const imageUrl= Object.values(albumInfo.image[5])\n\n// Add album to the library    \n   function addToLibrary() {\n    // See whats in the local storage \n    let albumLibrary = JSON.parse(localStorage.getItem(\"albumNameKey\")) || []\n    \n    // If library is empty just add the album\n    if (albumLibrary.length < 1) {\n        albumLibrary.push([albumInfo.name, albumInfo.artist, albumInfo.mbid, albumInfo.url, imageUrl[1] || Image])\n        alert(`${albumInfo.name} added to your library`)\n        localStorage.setItem(\"albumNameKey\", JSON.stringify(albumLibrary))\n        window.location.reload()\n        return\n    }\n     \n    let doesntExistYet = 0\n\n    console.log (albumLibrary.length)\n    for (let i = 0; i < albumLibrary.length; i++)  {\n        if (albumLibrary[i][2] === albumInfo.mbid) {\n            if (albumInfo.mbid === \"\") {\n                alert(`Unable to add ${albumInfo.name} to your library. ${albumInfo.name} is missing key information needed. Listen now still available.`)\n                return\n            }\n            alert(`${albumInfo.name} already saved to your libray.`)\n            window.location.reload()\n            doesntExistYet = 0\n            break\n        } else (\n            doesntExistYet += 1\n        )\n    }\n\n    if (doesntExistYet < albumLibrary.length) {\n        return  \n    } else {\n        albumLibrary.push([albumInfo.name, albumInfo.artist, albumInfo.mbid, albumInfo.url, imageUrl[1] || Image])\n        doesntExistYet = false \n        alert(`${albumInfo.name} added to your library`)\n        window.location.reload()\n    }\n\n    // Set added album to local storage \n    localStorage.setItem(\"albumNameKey\", JSON.stringify(albumLibrary))\n   } \n\n   \n   <LibraryDisplay/>\n\n   //Display searched album information\n       return (\n           <div className=\"albumInfo\">\n               <img className=\"displayImg\" src={imageUrl[1] || Image} alt=\"Album Cover\"/>\n               <h1 className=\"albumName\">{albumInfo.name} by {albumInfo.artist}</h1>\n               <a href={`${albumInfo.url}`} className=\"albumLink\">Listen Now</a>\n               <button className=\"btn\" onClick={addToLibrary}>Add to Library</button>\n           </div>   \n       )  \n}\n\nexport default AlbumDisplay","import React, {useState} from \"react\"\nimport AlbumDisplay from \"./AlbumDisplay\"\n\n\nfunction FindAlbum () {\n    const [albumN, setAlbumN] = useState(\"\")\n    const [artistN, setArtistN] = useState(\"\")\n    const [albumInfo, setAlbumInfor] = useState(\"\")\n\n\n    // Api call to fetch Album Data\n    const searchMusic = async (e) => {\n        e.preventDefault()\n\n        const url = ` https://ws.audioscrobbler.com/2.0?method=album.getinfo&api_key=a03decaea0227972bf104eea6a6ebdb8&artist=${artistN}&album=${albumN}&format=json`\n\n        try {\n            const res = await fetch (url, {headers: {\n                'Access-Control-Allow-Origin': 'http://localhost:3000',\n                 \"Access-Control-Allow-Credentials\" : \"true\",\n                \"Access-Control-Allow-Methods\": \"GET, POST, PUT\",\n                \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n              }})\n            const data = await res.json()\n            setAlbumInfor(data)\n        }catch(err) {\n            alert(\"Album not found. Please make surke you are entering the correct album information.\")\n            window.location.reload()\n        }\n\n        // Reset vlaue of forms \n        setAlbumN(\"\")\n        setArtistN(\"\") \n    }\n    \n    // Turned the returned api data object into an array\n    const albumInfoArray = Object.values(albumInfo)\n\n    return (\n        <div className=\"container\">\n            <form className=\"albumForm\" onSubmit={searchMusic}> \n                <label className=\"inputLabel\">Album:</label>\n                <input \n                    type=\"text\" \n                    name=\"albumN\"\n                    placeholder=\"Album Name\"\n                    required \n                    value={albumN}\n                    onChange= {(e) => setAlbumN(e.target.value)}\n                /> \n\n                <br/>\n\n                <label className=\"inputLabel\">Artist:</label>\n                <input \n                    type=\"text\" \n                    name=\"artistN\"\n                    placeholder=\"Artist Name\"\n                    required\n                    value={artistN}\n                    onChange= {(e) => setArtistN(e.target.value)}\n                />  \n\n                <br/>\n                \n                <button className=\"btn\" type=\"submit\">Search</button>\n            </form>\n\n            {/* Display album info */}\n            <div className=\"albumInfoContainer\">\n                {albumInfoArray.map(albumInfo => (\n                    <AlbumDisplay albumInfo={albumInfo} key={albumInfo.mbid}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default FindAlbum","import React from \"react\"\n\nfunction Header() {\n    return (\n        <div className=\"logo\">\n            <h1 className=\"title\">Album Libray</h1>\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\"\nimport \"./App.css\"\nimport FindAlbum from \"./FindAlbum\"\nimport Header from \"./Header\"\nimport LibraryDisplay from \"./Library\"\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <FindAlbum/>\n      <LibraryDisplay/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}